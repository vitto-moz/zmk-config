/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/behaviors.h>
#include <dt-bindings/zmk/outputs.h>

&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

&mt {
    tapping-term-ms = <300>; // The defaut value is 300
    flavor = "balanced";
};

/ {
        combos {
                compatible = "zmk,combos";
                combo_esc {
                timeout-ms = <50>;
                key-positions = <7 8>;
                bindings = <&kp ESC>;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                if-layers = <1 2>;
                then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &mo 4     &kp Q       &kp W      &kp E        &kp R      &kp T      &kp Y    &kp U      &kp I        &kp O      &kp P           &kp BSPC
   &kp GRAVE &mt LCTRL A &mt LALT S &mt LSHIFT D &mt LGUI F &kp G      &kp H    &mt RGUI J &mt RSHIFT K &mt RALT L &mt RCTRL SEMI  &kp SQT
   &kp LBKT  &kp Z       &kp X      &kp C        &kp V      &kp B      &kp N    &kp M      &kp COMMA    &kp DOT    &kp FSLH        &kp RBKT
                                    &kp TAB      &mo 1      &kp SPACE  &kp RET  &mo 2      &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2        &kp N3        &kp N7       &kp PIPE       &kp LNLCK  &kp N7   &kp N8   &kp N9    &trans  &kp BSPC
   &bt BT_CLR &trans       &trans        &trans        &trans       &trans         &trans     &kp N4   &kp N5   &kp N6    &kp N0  &trans
   &kp LSHFT  &trans       &kp PRCNT     &trans        &trans       &trans         &trans     &kp N1   &kp N2   &kp N3    &trans  &trans
                                         &kp LGUI      &trans       &kp SPACE      &trans     &trans   &kp DEL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TILDE &kp LPAR  &kp RPAR  &kp LBRC   &kp RBRC   &kp PIPE     &kp EXCL  &kp QMARK  &kp UP    &kp EQUAL   &kp GT      &trans
   &trans    &kp LGUI  &kp LALT  &kp LSFT   &kp LCTL   &kp HASH     &kp UNDER &kp LEFT   &kp DOWN  &kp RIGHT   &kp K_CMENU &kp GRAVE
   &trans    &kp LT    &kp GT    &kp LBKT   &kp RBKT   &kp AMPS     &kp PLUS  &kp MINUS  &kp PLUS  &kp ASTRK   &kp SLASH   &kp TILDE
                                 &kp LGUI   &trans     &kp SPACE    &kp RET   &trans    &kp RALT
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &bootloader &kp C_BRI_DN    &kp C_BRI_UP  &kp K_VOL_DN     &kp K_VOL_UP   &trans       &bt BT_CLR   &kp F7   &kp F8    &kp F9   &kp F10  &bt BT_SEL 0
   &sys_reset  &kp LCTL        &kp LALT      &kp LSFT         &kp LGUI       &trans       &trans       &kp F4   &kp F5    &kp F6   &kp F11  &bt BT_SEL 1
   &trans      &kp LT          &kp GT        &kp LBKT         &kp RBKT       &trans       &trans       &kp F1   &kp F2    &kp F3   &kp F12  &bt BT_SEL 2
                                             &kp LGUI         &trans         &kp SPACE    &kp RET      &trans   &kp RALT
                        >;
                };

                mouse_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |     
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans     &kp N1       &kp N2        &kp N3        &kp N7       &kp PIPE       &kp KP_SLASH    &kp KP_N7     &kp KP_N8   &kp KP_N9    &kp KP_PLUS   &kp DEL
   &bt BT_CLR &kp LCTL     &kp LALT      &kp LSFT      &kp LGUI     &bt BT_SEL 4   &kp KP_ASTERISK &kp KP_N4     &kp KP_N0   &kp KP_N6    &kp KP_MINUS  &trans
   &kp LSHFT  &trans       &kp PRCNT     &trans        &trans       &trans         &kp KP_NUM      &kp KP_N1     &kp KP_N2   &kp KP_N3    &kp KP_DOT    &trans
                                         &kp LGUI      &trans       &kp SPACE      &kp KP_N0       &kp KP_N5     &kp KP_N5
                        >;
                };

        };
};
